#!/bin/bash

export LANG=C

function clean-up-osht-output()
{
    sed -i 's,^[0-9/]* [0-9:]* :,xxxx/xx/xx xx:xx:xx :,g;${/^$/d;};s/squid-cgi [0-9\.]*/squid-cgi v.vv/g' \
        ${OSHT_STDIO}
    sed -i "s,$PWD,<pwd>,g" ${OSHT_STDIO}
}

function sort-osht-output()
{
    cat ${OSHT_STDIO} | sort > xout
    mv xout ${OSHT_STDIO}
}

function sort-osht-output-n-first-lines()
{
    local N=$1

    #  Make sure we clean the time-stamp to not be sorting based on it
    clean-up-osht-output

    head -$N ${OSHT_STDIO} | sort > xout
    sed -i "1,${N}d" ${OSHT_STDIO}
    cat ${OSHT_STDIO} >> xout
    mv xout ${OSHT_STDIO}
}

function sort-osht-output-but-n-lines()
{
    local N=$1

    head -$N ${OSHT_STDIO} > xout
    sed -i "${N}d" ${OSHT_STDIO}
    sort ${OSHT_STDIO} >> xout
    mv xout ${OSHT_STDIO}
}

function sort-osht-output-but-first-line()
{
    sort-osht-output-but-n-lines 1
}

function clean-up-osht-input()
{
    sed 's,^[0-9/]* [0-9:]* :,xxxx/xx/xx xx:xx:xx :,g;${/^$/d;}'
    sed -i "/_[_]*TRACE:/d" ${OSHT_STDIO}
}

function CLEAN-DIFF()
{
    clean-up-osht-output
    cat - | clean-up-osht-input | \
DIFF
}

export ROOTDIR=$PWD

function run-test()
{
    local TEST=$1
    local EXP=$2

    cp drivers/$TEST .
    source ./$TEST
    cd $ROOTDIR
    rm -f $TEST
}

./clean

export CDPATH=

rm -f scripts.d/.store

# copy scripts
cp ../scbi .
for tools in lint source-archive store show shell; do
    cp ../scbi-$tools .
done

cp ../scripts.d/0_runtime scripts.d/
cp ../scripts.d/_os_* scripts.d/
cp ../scripts.d/[2-9]* scripts.d/
cp ../scripts.d/.pkgs-* scripts.d/

export PATH="$PWD:$PATH"

# patch scbi driver to avoid loading $HOME/.scbi ini file

sed -i 's,\(.*ini-load-file \$HOME/.scbi\),#\1,g' scbi

# patch rsync to use safe mode (checksum) as the tests repositories are small,
# and has some files with same time-stamp.

sed -i 's/$OPT --exclude/$OPT -c --exclude/g' scripts.d/7_modgen
sed -i 's/dlog/ilog/g' scripts.d/7_modgen

mkdir -p .root/.patches

# kill mail for testing
export SCBI_EMAIL_NOTIFICATION=no

# be sure the global install directory exists
mkdir -p $PWD/.root/builds/install

# create the log dirs
mkdir -p $PWD/logs

. osht

cd drivers
if [ -z "$1" ]; then
    TESTS=( test??? )
else
    TESTS=( $* )
fi
cd ..

PLAN 1018

for file in ${TESTS[*]}; do
    cd $ROOTDIR
    export TESTREPOS=$ROOTDIR/.root/repos

    # copy/reset patches each time as some drivers
    # are changing them for testing purpose.
    cp .root/repos/*.patch .root/.patches/

    # clean build directory to ensure each run are independent
    rm -fr .root/builds

    bfile=$(basename $file)
    echo "========== $bfile"
    run-test $bfile expected/$bfile.exp
done
