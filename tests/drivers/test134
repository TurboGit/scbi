#  Check precedence ENV < INI < COMMAND_LINE

export SCBI_INI_FILE=$ROOTDIR/.scbiini

cat <<EOF > $SCBI_INI_FILE
[std]
        plan = v2

[common]
        env = withplan
        modules = lib1
        no-patch = yes
EOF

# Using plan as defined in environment
RUNS ./scbi --ini

CLEAN-DIFF <<EOF
xxxx/xx/xx xx:xx:xx : Building lib1 [default] (v1)
xxxx/xx/xx xx:xx:xx : native x86_64-linux-gnu
xxxx/xx/xx xx:xx:xx : steps: setup config build install wrapup
xxxx/xx/xx xx:xx:xx : get sources from git
xxxx/xx/xx xx:xx:xx : trigger: not yet built
xxxx/xx/xx xx:xx:xx : build starting
xxxx/xx/xx xx:xx:xx : build completed
xxxx/xx/xx xx:xx:xx : install starting
xxxx/xx/xx xx:xx:xx : install completed
xxxx/xx/xx xx:xx:xx : copy install into <sandbox>/install
xxxx/xx/xx xx:xx:xx : End Building lib1 [default] (v1)
EOF

# Using plan as defined in ini file
RUNS ./scbi --ini=std

CLEAN-DIFF <<EOF
xxxx/xx/xx xx:xx:xx : Building lib1 [default] (v2)
xxxx/xx/xx xx:xx:xx : native x86_64-linux-gnu
xxxx/xx/xx xx:xx:xx : steps: setup config build install wrapup
xxxx/xx/xx xx:xx:xx : get sources from git
xxxx/xx/xx xx:xx:xx : trigger: sources changed
xxxx/xx/xx xx:xx:xx : build starting
xxxx/xx/xx xx:xx:xx : build completed
xxxx/xx/xx xx:xx:xx : install starting
xxxx/xx/xx xx:xx:xx : install completed
xxxx/xx/xx xx:xx:xx : copy install into <sandbox>/install
xxxx/xx/xx xx:xx:xx : End Building lib1 [default] (v2)
EOF

# Using plan as defined on command line
RUNS ./scbi --ini=std --plan=skip

CLEAN-DIFF <<EOF
xxxx/xx/xx xx:xx:xx : Module lib1 marked to be skipped
EOF

rm -f $SCBI_INI_FILE
unset SCBI_INI_FILE
