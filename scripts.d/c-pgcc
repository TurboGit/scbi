
#  A partial GCC C compiler for building a minimum runtime
#  used to build a mingw32 cross-compiler (i686 or x86_64).
#
#  Should only be used as cross : --target=XXX-pc-mingw32

function c-pgcc-vcs()
{
    echo default
    echo none
    echo git
    echo https://gcc.gnu.org/git/gcc.git
}

function c-pgcc-version()
{
    local PREFIX=$1
    local TARGET=$2

    if [[ -f $PREFIX/bin/$TARGET-gcc ]]; then
        return $VERSION_OK
    else
        return $VERSION_ERROR
    fi
}

function c-pgcc-build-depends()
{
    echo os@-libgmp-dev
    echo os@-libmpc-dev
    echo os@-libmpfr-dev

    echo c-binutils
}

function c-pgcc-build-env()
{
    system-compiler
}

function c-pgcc-env()
{
    local PREFIX=$1
    local TARGET=$2

    add-to-var PATH $PREFIX/bin
    add-to-var C_INCLUDE_PATH \
               $(last-modified-directory $PREFIX/lib/gcc/$TARGET/*/include)
}

function c-pgcc-out-of-tree()
{
    echo true
}

function c-pgcc-pre-setup()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo c-pgcc is only meant to be used in cross mode
    false
}

function c-pgcc-cross-pre-setup()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    true
}

function c-pgcc-pre-config()
{
    local PREFIX=$1
    local TARGET=$2

    #  We do not want to configure/build Ada language
    rm -fr ../src/gcc/ada
}

function c-pgcc-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo --prefix=$PREFIX
    echo --target=$TARGET
    echo --host=$SCBI_HOST
    echo --enable-thread=win32
    echo --enable-__cxa_atexit
    echo --disable-nls
    echo --disable-multilib
    echo --disable-libada
    echo --disable-sjlj-exceptions
    echo --enable-large-address-aware
    echo --enable-languages=c
}

function c-pgcc-cross-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    CFLAGS="-O1" ../src/configure  \
          $(get-config-options $PREFIX $TARGET $VARIANT)
}

function c-pgcc-build()
{
    local PREFIX=$1
    local TARGET=$2

    # The make will fail, but we install the partial C compiler
    # which is sufficient to build the MingW runtime.

    make -j$SCBI_JOBS

    return 0
}

function c-pgcc-install()
{
    # The make will fail, but we install the partial C compiler
    # which is sufficient to build the MingW runtime.

    make -k install

    return 0
}

function c-pgcc-prefix()
{
    echo NONE
}
