#  Support for distrib packages.
#
#  For adding a new distrib:
#     - add distrib in get-distrib
#     - implement init-<distrib>-pkg
#     - implement check-<distrib>-pkg
#     - implement get-<distrib>-lib-for-dev (optional)
#     - add <pkg>-<distrib>-name routine for specific package name

declare -A SCBI_PKGS

function get-distrib()
{
    echo deb
}

######################################
# cache all installed packages

function init-deb-pkg()
{
    while read ii pkg version dummy; do
        SCBI_PKGS["$pkg"]=$version
    done < <( dpkg-query -l | tail -n+6 | sed 's/:amd64//g' )
}

######################################
# check-deb-pkg should return:
#   3 - package not found
#   2 - package found but not installed
#   1 - package installed but wrong version
#   0 - package installed with proper version

function check-deb-pkg()
{
    local pck=$1
    local version=$(get-version-number $2)

    local inst_ver=${SCBI_PKGS[$pck]}

    if [ -z $inst_ver ]; then
        #  Package is not installed, check if it exists

        dpkg-query -l $pck &> /dev/null

        if [ $? = 0 ]; then
            return 2
        else
            return 3
        fi

    else
        #  Is the installed version ok?

        if [[ $inst_ver > $version ]]; then
            return 0
        else
            return 1
        fi
    fi
}

function get-deb-lib-for-dev()
{
    local pkg=$1

    if [ ${pkg: -4} != "-dev" ]; then
        echo "error: $pkg is not a dev package (should end with -dev)"
        return 1
    fi

    # package name without trailing -dev
    local base=${pkg:0:-4}

    local res=$(LC_ALL=C LANG=C apt-cache depends $1 | grep 'Depends:' \
                    | grep "$base" | cut -d':' -f2)

    for D in $res; do
        if [ "${D: -4}" = "-dev" ]; then
            get-deb-lib-for-dev "$D"
        else
            echo $D
        fi
    done
}

# returns the package name for the current distribution
function get-pkg-name()
{
    local pkg=$1

    fn-exists $pkg-$(get-distrib)-name

    if [[ $? = 0 ]]; then
        echo $pkg-$(get-distrib)-name
    else
        echo $pkg
    fi
}

# returns the package name for the current distribution
function get-pkg-version()
{
    local pkg=$1

    local pname=$(get-pkg-name $pkg)
    echo ${SCBI_PKGS[$pname]}
}

# returns the library for the given dev package
function get-lib-for-dev()
{
    local pkg=$(get-pkg-name $1)

    get-$(get-distrib)-lib-for-dev $pkg
}

function check-pkg()
{
    local name_ver=($(echo $1 | tr ":" " "))
    local pkg=${name_ver[0]}
    local version=${name_ver[1]}

    local distname=$(get-pkg-name $pkg)

    check-$(get-distrib)-pkg $pkg $version

    local res=$?

    if [ $res = 3 ]; then
        echo "error: $pkg not found"
        return 1
    elif [ $res = 2 ]; then
        if [ $version == NONE ]; then
            echo "error: $pkg should be installed."
        else
            echo "error: $pkg:$version should be installed."
        fi
        return 1
    elif [ $res = 1 ]; then
        echo "error: $pkg:$version should be installed."
        return 1
    else
        return 0
    fi
}

init-$(get-distrib)-pkg
