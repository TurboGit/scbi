############################## svn-co

function svn-co()
{
    URL=$1
    NAME=$2

    (
	if [ ! -d $SREPO/$NAME ]; then
	    cd $SREPO
	    svn co $URL $NAME
	fi
    )
}

############################## git-co

function git-co()
{
    URL=$1
    NAME=$2

    (
	if [ ! -d $GREPO/$NAME ]; then
	    cd $GREPO
	    git clone $URL $NAME
	fi
    )
}

############################## git-branch

# $1       is the main branch to build
# $2 .. $n are the branches to merge into the build branch

function git-branch()
{
    MODULE=$1
    BUILDB=scbi-build
    BRANCH=$2

    # first, check that there is no un-committed modifications

    git diff --exit-code --quiet HEAD

    if [ $? == 1 ]; then
       elog $MODULE cannot change branch with uncommitted changes
       return 1
    fi

    # first, let's update the repository

    git checkout master
    git fetch

    # if no branch specified use master

    if [ "$BRANCH" == "" ]; then
        BRANCH=master
    fi

    # if there is no branch to merge, just build the current branch

    if [ "$3" == "" ]; then
        # and if the current branch is master and we want to build it, we
        # want to update it now.
        CBRANCH=$(git rev-parse --abbrev-ref HEAD)
        if [ "$BRANCH" == "master" -a "$CBRANCH" == "master" ]; then
            git pull
        fi

        [ -f .gitmodules ] && git submodule update
    fi

    # check that $BRANCH is a known branch

    git show-ref --verify --quiet refs/heads/$BRANCH

    if [ $? == 1 ]; then
        git show-ref --verify --quiet refs/remotes/$BRANCH
        if [ $? == 1 ]; then
            return 1
        fi
        BR=refs/remotes/$BRANCH
    else
        BR=refs/heads/$BRANCH
    fi

    # create the build branch if needed

    git show-ref --verify --quiet refs/heads/$BUILDB

    if [ $? == 1 ]; then
        git branch $BUILDB
    fi

    # move to build branch, and initialize it

    git checkout $BUILDB
    git reset --hard $BRANCH

    # merge all other branches

    shift

    while [ "$1" != "" ]; do
        shift
        git merge $1
    done

    [ -f .gitmodules ] && git submodule update

    return 0
}
