
############################## define-var
#  Append/Prepend/Set VALUE to environment variable VAR,
#  does nothing if VALUE does not exists and VAR is PATH.

function define-var()
{
    local ACTION=$1
    local VAR=$2
    local VALUE=$3

    #  Separator of values in variable
    local SEP=";"

    function _delete_internal()
    {
        local _VAR=$1
        local _VALUE=$2

        remove-from-string-sep ${_VAR} ${_VALUE} $SEP
    }

    # If adding to PATH, do so only if DIR exists

    if [[ -d "$VALUE" ]] || [[ "${VAR}" != "PATH" ]]; then
        # If SCBI_ENV_MODULE file exists, record the change into
        # it. This is used internally by scbi to record .log/env.cmd
        # for each module. This env file can then be sourced to replay
        # the commands manually.

        local VALUE_EXISTS=no

        if [[ -n $SCBI_ENV_MODULE ]]; then
            echo define-var $ACTION $VAR \"$VALUE\" >> $SCBI_ENV_MODULE
        fi

        # With MSYS & Cygwin the PATH separator is ':'

        if [[ $VAR == "PATH" ]]; then
            SEP=":"
            VALUE=$(cygpath -u "$VALUE")
        fi

        if [[ "$SEP${!VAR}$SEP" == *"$SEP$VALUE$SEP"* ]]; then
            #  If the value already exists, make sure it is first removed
            #  in the append/prepend mode to force it to be added at the
            #  start or end of the variable.
            VALUE_EXISTS=yes
        fi

        case $ACTION in
            SET|S)
                export $VAR="${VALUE}"
            ;;
            UNSET|U)
                unset $VAR
            ;;
            ADD)
                [[ $VALUE_EXISTS == no ]] &&
                    export $VAR="${VALUE}${!VAR:+$SEP}${!VAR}"
            ;;
            APPEND|A)
                [[ $VALUE_EXISTS == yes ]] &&
                    _delete_internal $VAR $VALUE

                export $VAR="${!VAR}${!VAR:+$SEP}${VALUE}"
            ;;
            PREPEND|P)
                [[ $VALUE_EXISTS == yes ]] &&
                    _delete_internal $VAR $VALUE

                export $VAR="${VALUE}${!VAR:+$SEP}${!VAR}"
            ;;
            REMOVE|R)
                [[ $VALUE_EXISTS == yes ]] &&
                    _delete_internal $VAR $VALUE
            ;;
        esac
    fi
}
