
############################## check-tool

function check-tool()
{
    if [ -z "$(which $1)" ]; then
	echo Required tool $1 missing, please update the PATH
	return 1
    fi
    return 0
}

############################## check-tools

function check-tools()
{
    local res=0

    while [ "$1" != "" ]; do
	check-tool $1
	res=$(expr $res + $?)
	shift
    done
    return $res
}

############################## module-setup

function module-setup()
{
    local PREFIX=$1
    local TARGET=$2

    if [ -h src_cp ]; then
        rsync -a --delete --exclude=".git" --exclude=".svn" \
            --exclude "*.o" --exclude "*.a" --exclude "*.dll" \
            --exclude "*.so" --exclude "*.so.*" --exclude "*.ali" \
            --link-dest=../src_cp src_cp/. $TARGET/
        rm -f build
        ln -s $TARGET build
    fi
}

############################## module-purge

function module-purge()
{
    local PREFIX=$1
    local TARGET=$2

    if [ -h src_cp ]; then
        rsync -aH --exclude=".git" --exclude=".svn" --delete --delete-excluded \
            --exclude "*.o" --exclude "*.a" --exclude "*.dll" \
            --exclude "*.so" --exclude "*.so.*" --exclude "*.ali" \
            --link-dest=../src_cp src_cp/. $TARGET/
    elif [ -d $TARGET ]; then
	rm -fr $TARGET
    fi
}

############################## display-file

function display-file()
{
    local file=$1

    echo File : $file
    cat $file
}
