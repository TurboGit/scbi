
function c-binutils-vcs()
{
    echo default
    echo none
    echo git
    echo http://sourceware.org/git/binutils-gdb.git
}

function c-binutils-out-of-tree()
{
    echo true
}

function c-binutils-build-env()
{
    system-compiler
}

function c-binutils-version()
{
    local PREFIX=$1
    local TARGET=$2

    TOOL=ld

    if [[ $SCBI_HOST != $TARGET ]]; then
        TOOL=${TARGET}-ld
    fi

    if [[ "$(command -v $TOOL)" = "" ]]; then
        echo $VERSION_ERROR
    else
        echo $($TOOL --version | head -1 | cut -d' ' -f5)
    fi
}

function c-binutils-cross-config()
{
    local PREFIX=$1
    local TARGET=$2

    CONF_OPT="--prefix=$PREFIX --disable-multilib --disable-gdb"

    ../src/configure --target=$TARGET $CONF_OPT
}

function c-binutils-config()
{
    local PREFIX=$1
    local TARGET=$2

    CONF_OPT="--prefix=$PREFIX --disable-multilib --disable-gdb"

    ../src/configure --build=$SCBI_HOST $CONF_OPT
}

function c-binutils-build()
{
    local PREFIX=$1
    local TARGET=$2

    local DEBUG=$(get-build-type MAKE false)

    if [[ $DEBUG == true ]]; then
       CFLAGS="-O0 -g -Wno-error"
    else
       CFLAGS="-O2 -g -Wno-error"
    fi

    make -j6 CFLAGS="$CFLAGS" CC=gcc
}

function c-binutils-cross-install()
{
    local PREFIX=$1
    local TARGET=$2

    # install into the partial gcc compiler too

    make install &&
        mkdir -p $SCBI_BDIR/c-pgcc/install/ &&
        rsync -a ../install/. $SCBI_BDIR/c-pgcc/install/
}

function c-binutils-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}
